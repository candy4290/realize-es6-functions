一面
1.做一个简单的自我介绍，做过小程序吗（获取id流程之类的）。
2.哪个项目印象深刻？
3.你觉得你的优势是什么？
4.平时候会从哪些渠道学习？
5.空闲时间一般会干吗？
6.img标签和backgroundb背景图，在加载上有什么差异性？
img标签利于屏幕阅读器，seo。
7.network中大小中，from memory,from disk。
【可以扩展说前端项目index.html协商缓存，确保刷新了页面可以获取到新内容。js、css强缓存，hash文件名。
    可以扩展到新版本部署后，怎么办？
】
8.接口请求get和post有什么区别。get请求会不会存在缓存呢？
9.原生xhr怎么取消请求
10.map和forEach有什么区别？哪个性能好，性能差？
稀疏数组，map或forEach遍历时，会跳过。
11.数组中，哪些遍历方法可以中断？怎么中断？
12. ...是什么东西的缩写，扩展运算符是什么东西的缩写？
13.::和:有什么区别？这种写法有什么原因吗(解决了什么问题)？
14.vue2什么情况下响应式不会生效。
15.除了localstorage,sessionstorage,cookie还有哪些？
sessionStorage，当前会话，标签关闭，就会丢失，不同tab间不共用。
cookie默认是会话期有效，浏览器关闭时丢失，不同tab共用的。
16.我要循环一个长度为10W的数组，有什么办法？（尽可能多说几种）
17.讲下对闭包的理解。闭包用的多吗？闭包的结构是什么样的？
18.怎么判断数据类型?(尽可能多说)
typeof,instanceof,isPrototypeOf,Object.prototype.toString.call(x),
19.{}==[]，内部发生了什么？
20.react合成事件和原生事件有什么区别？谈谈对合成事件的理解。
21.预解析有了解过吗？dns解析会提前吗？
<link rel="dns-prefetch" href="https://example.com" /> 预解析
<link rel="preconnect" href="https://example.com"> 预连接
22.你觉得让你写vue的小程序，需要多久？
23.js原生有了解过吗？
二面
1.你感觉总体聊的怎么样？
【复盘，真面，可以举具体例子
比如刚才提到了小程序开发，uniapp。还是和我比较契合的，我曾经做过这一块的内容。
】
2.在职还是离职，怎么考虑的？
【

】
3.接下来职业规划怎么考虑的？
【
先讲讲当年能力，比如技术面。三大框架、nodejs、小程序、混合移动端开发。
然后讲技术方向，业务方向。技术方向上tobc追求性能极致，用户体验极致。
业务上希望通过沉淀达到一个较深的积累【可以说说目前为了这一块做了哪些努力】
】
4.你觉得你自己最大的优点是什么？
【解决问题能力，技术方向、跨部门协作；】
5.你觉得自己有什么缺点？
【
初期比较关注技术实现，忽略业务细则。后续系统庞大之后，对于业务把控不到位。
现在会主动参与到前期的业务需要评审讨论。深度理解业务，对开发还是比较有利的。(帮忙编写fs文档)
】
6.如果公司录用你，何时到岗？薪资要求？
7.在哪家公司的技术成长是最大的？
【
主导前端框架技术落地，从jquery到angluar到react的切换。技术上从0到1负责落地。
对接外部不同厂商的sdk。形成文档，落地，帮助后面的快速对接。
后面也带了两三个新人。做任务拆分，代码review。帮他们快速融入。
业务上，把公司的项目做大，推广出去，从上海市局->各个分局，到外地。到公司被并购。

可以说这段经历让我从一个熟练开发者成长为了一个有整体意识、注重可维护性和协作能力的前端工程师。
】
8.你们现在开发团队规模是什么样的？
各个岗位人数、协助方式，任务管理方式。
9.你觉得在开发过程中，最大的成就感来自于哪里？
10.开发过程中涉及很多岗位，和哪些岗位的相处有挑战性，或者比较难的？
【PM】技术实现细则上有认知偏差。边界情况未在前期讨论清楚。导致后期实现效果与后期不一致，不对应。
解决方案：在需求评审阶段积极参与，技术前置参与讨论。快速出具可验证的demo展示风险点，边界情况。出具“前端设计文档”，提前列清楚约束、难点和风险。

其实这些挑战并不可怕，关键在于沟通方式(信息对等)、信任积累。
我过去也曾踩坑，但现在更注重用提前介入、明确标准、及时反馈来降低协作成本。

11.团队中什么样的沟通方式，会让人比较头疼？
问题：让人无法判断优先级、不清楚为什么要改，也容易造成理解偏差，做完了可能还被说“不是这个意思”。
应对：我会主动追问，“这个需求背后解决什么问题？”、“有没有数据或用户反馈支撑？” 来引导对方补充背景。

问题：信息不透明，容易遗漏；等出问题时“谁说过”也无法确认。
应对：我比较倡导把关键讨论放在飞书群、Jira 任务、PR 讨论区里；私聊后同步公开结论，是最基本的透明责任制。

总结来说，最头疼的沟通是：信息不完整、表达不明确、缺乏记录和闭环。这些问题一旦变多，不仅效率低，还会损耗团队间的信任。

12.你有什么想要问我的？