1>Element.getBoundingClientRect()
返回DomRect对象{left/x: number,top/y:number,right:number,bottom:number,width:number,height:number}
left/x,top/y是相对于当前视口左上角位置的举例，滚动时，值也跟着变化。
width,height包含了content区域+padding区域+border区域+滚动条(宽度/高度)

2>Element.offsetWidth/offsetHeight
获取元素的宽度高度，与getBoundingClientRect获取到的宽度高度的唯一区别是，这里经过了四舍五入(Math.round())

3>Element.clientWidth/clientHeight
content区域+padding区域；不包含滚动条大小！！！

4>Element.offsetTop/offsetLeft
定位元素：position属性值为relative,absolute,fixed,sticky中的一个的元素。
offsetParent:在层级上离元素最近的定位元素，或者是body/td/th/table元素，被称为offsetParent。
offsetTop/offsetLeft: 元素外边框距离offsetParent边框内侧的距离。

5>Element.clientTop/clientLeft
clientTop,clientLeft返回上、左边框的距离。如果左边有滚动条的话，也包含了滚动条宽度。

6>Element.scrollWidth/scrollHeight
获取元素在不使用滚动条的情况下，适合视口中所有内容所需要的最小宽度/高度。测量方法与clientWidth一致。
如果元素内容可以适合，不需要滚动条，则scrollWidth与clientWidth相等。

7>Element.scrollTop/scrollLeft
获取元素内部，垂直/水平 方向上目前的滚动距离

8>MouseEvent.pageX/pageY
返回相对于整个文档左上角的距离，包含了当前已经滚动的距离(如果发生滚动的话)

9>MouseEvent.clientX/clientY
返回相对于当前视口左上角的距离。页面左上角永远是0,0(与滚动距离无关)

10>MouseEvent.screenX/screenY
获取鼠标到屏幕左上角距离

11>window.screenLeft/screenTop
获取浏览器左上角到屏幕左上角距离