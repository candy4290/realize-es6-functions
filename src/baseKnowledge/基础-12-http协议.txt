1.tcp三次握手
全双工，需要确保客户端/服务端 能发送 并 对方可以收到，

1>客户端发送SYN（同步）包，表示请求建立连接，并携带一个初始序列号seq=x
2>服务端收到后，返回SYN-ACK（同步-确认）包，确认收到请求后，并告知自己的初始序列号seq=y,同时确认ack=x+1
3>客户端收到后，返回ACK（确认）包，确认ack=y+1,连接建立完成。

示意图：
客户端 -> 服务器: SYN(seq=x)
服务器 -> 客户端: SYN-ACK(seq=y, ack=x+1)
客户端 -> 服务器: ACK(ack=y+1)

意义:
1>保证通信双方都能收发数据（双向通信）
2>确认双方的初始序列号，防止数据错乱。
3>防止旧的连接请求包影响新的连接。

2.tcp四次挥手
1>客户端 发送 FIN（终止）包，表示不再发送数据，但仍能接收数据。
2>服务器 收到 FIN 后，返回 ACK，表示收到关闭请求，但可能仍有数据需要传输。
3>服务器 处理完剩余数据后，发送 FIN 关闭连接。
4>客户端 收到 FIN 后，返回 ACK，并等待一段时间（TIME_WAIT），确保服务器已收到后，正式关闭连接。

示意图：
客户端 -> 服务器: FIN(seq=a)       # 客户端请求断开
服务器 -> 客户端: ACK(ack=a+1)     # 服务器确认
服务器 -> 客户端: FIN(seq=b)       # 服务器请求断开
客户端 -> 服务器: ACK(ack=b+1)     # 客户端确认，进入 TIME_WAIT 状态

意义：
1>确保数据完整传输，避免数据丢失。
2>客户端 TIME_WAIT 保护机制，防止旧的 TCP 连接影响新连接。
3>服务器优雅关闭，避免突然断开导致数据丢失。

3.网络拥塞
1>慢启动
2>拥塞避免
3>快重传
4>快恢复
3.五层网络模型
应用层：定义了各种应用协议，如HTTP、FTP、SMTP等，应用层的协议规定了应用程序之间通信的方式和数据格式。
传输层：负责端到端的数据传输控制，提供数据传输服务，如FTP、UDP
网络层：负责在不同的网络之间，进行数据包的路由和转发。
数据链路层：负责将物理层传输的比特流组织成数据帧。
物理层：负责在物理介质上传输原始的比特流。